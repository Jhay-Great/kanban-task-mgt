@use 'sass:math';
@use './variables' as var;
@use './functions' as func;

@mixin font-default($weight) {
    font-weight: $weight;
    font-family: var.$font-jakarta-sans;
}

@mixin headerXl {
    @include font-default(bold);
    font-size: func.pixelsToRem(24);
    line-height: func.pixelsToRem(30);
    color: var.$color-black;
}

@mixin headerL {
    @include font-default(bold);
    font-size: func.pixelsToRem(15);
    line-height: func.pixelsToRem(19);
}

@mixin headerM {
    @include font-default(bold);
    font-size: func.pixelsToRem(12);
    line-height: func.pixelsToRem(15);
}

@mixin bodyM {
    @include font-default(medium);
    font-size: func.pixelsToRem(13);
    line-height: func.pixelsToRem(23);
}

@mixin bodyS {
    @include font-default(bold);
    font-size: func.pixelsToRem(12);
    line-height: func.pixelsToRem(15);
}

// buttons
@mixin buttons ($color: var.$color-white, $bg: var.$transparent) {
    color: $color;
    background: $bg; 
}
@mixin button-fonts($size, $weight) {
    font-weight: $weight;
  
    // Check if the size has a 'rem' unit, otherwise convert from 'px' to 'rem'
    @if unit($size) == 'rem' {
      font-size: $size;
    } @else {
      font-size: math.div($size, 16) * 1rem;
    }
  }
  

@mixin primary-button-idle {
    background-color: var.$color-main-purple;
    color: var.$color-white;
}

@mixin secondary-button-idle {
    background-color: func.addTransparency(var.$color-main-purple, 10);
    color: var.$color-main-purple;

}

@mixin button-destructive {
    background-color: var.$color-red;
    color: var.$color-white;
}

// button hover
@mixin primary-button-idle-hover {
    background-color: var.$color-purple-light;
}

@mixin secondary-button-idle-hover {
    background-color: func.addTransparency(var.$color-main-purple);
}

@mixin button-destructive-hover {
    background-color: func.addTransparency(var.$color-main-purple);
}

// flex
@mixin flex ($direction: row, $gap: 1) {
    display: flex;
    flex-direction: $direction;
    gap: $gap + rem;
}

// grid
@mixin grid () {
    display: grid;
    grid-template-columns: 300px 1fr;
    grid-template-rows: 100%;
}